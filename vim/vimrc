set nocompatible

" =============== General settings =======================
set number                      "Line numbers are good
set backspace=indent,eol,start  "Allow backspace in insert mode
set history=1000                "Store lots of :cmdline history
set showcmd                     "Show incomplete cmds down the bottom
set showmode                    "Show current mode down the bottom
set gcr=a:blinkon0              "Disable cursor blink
set autoread                    "Reload files changed outside vim

" This makes vim act like all other editors, buffers can
" exist in the background without being in a window.
" http://items.sjbach.com/319/configuring-vim-right
set hidden

" turn on syntax highlighting
syntax on

" Change leader to a comma because the backslash is too far away
" That means all \x commands turn into ,x
" The mapleader has to be set before vundle starts loading all
" the plugins.
let mapleader=","

" =============== Vim-Plug Initialization ===============
" This loads all the plugins specified in ~/.vim/plugins.vim
if filereadable(expand("~/.vim/plugins.vim"))
  source ~/.vim/plugins.vim
endif

" ================ Turn Off Swap Files ==============
set noswapfile
set nobackup
set nowb

" ================ Indentation ======================
set autoindent
set smartindent
set smarttab
set shiftwidth=2
set softtabstop=2
set tabstop=2
set expandtab

" Auto indent pasted text
nnoremap p p=`]<C-o>
nnoremap P P=`]<C-o>

filetype plugin on
filetype indent on

" Display tabs and trailing spaces visually
set list listchars=tab:\ \ ,trail:·

set nowrap       "Don't wrap lines
" set linebreak    "Wrap lines at convenient points

" ================ Folds ============================
set foldmethod=indent   "fold based on indent
set foldnestmax=3       "deepest fold is 3 levels
set nofoldenable        "dont fold by default

" Folding settings
" set foldenable
" set foldmethod=syntax
" set foldmethod=manual

" ================ Completion =======================
" set wildmode=lS+ist:longest
set wildmode=full "old settings
set wildmenu                "enable ctrl-n and ctrl-p to scroll thru matches
set wildignore=*.o,*.obj,*~ "stuff to ignore when tab completing
set wildignore+=*vim/backups*
set wildignore+=*sass-cache*
set wildignore+=*DS_Store*
set wildignore+=vendor/rails/**
set wildignore+=vendor/cache/**
set wildignore+=*.gem
set wildignore+=log/**
set wildignore+=tmp/**
set wildignore+=*.png,*.jpg,*.gif
" set wildignore+=*/tmp/*,*.so,*.swp,*.zip
"
" ================ Scrolling ========================
set scrolloff=8         "Start scrolling when we're 8 lines away from margins
set sidescrolloff=15
set sidescroll=1

" ================ Search ===========================
set incsearch       " Find the next match as we type the search
set hlsearch        " Highlight searches by default
set ignorecase      " Ignore case when searching...
set smartcase       " ...unless we type a capital

" ================ Colors settings ==================
let g:jellybeans_use_term_background_color = 1
colorscheme jellybeans

set t_Co=256
set term=screen-256color

if has("gui_running")
  set guifont=Monaco\ 10
  set guioptions-=T " Remove toolbar
  set guioptions-=m " Remove menu

  " fix background black color
  " hi Normal  guibg=#222
  " hi NonText guibg=#222
  " hi LineNr  guibg=#222
else
  let g:CSApprox_loaded = 1
endif

" ================== Ctag settings ===================
set tags=./tags;,./TAGS;,tags,TAGS

" Check .git/tags for ctags file.
fun! FindTagsFileInGitDir(file)
  let path = fnamemodify(a:file, ':p:h')
  while path != '/'
    let fname = path . '/.git/tags'
    if filereadable(fname)
      silent! exec 'set tags+=' . fname
    endif
    let path = fnamemodify(path, ':h')
  endwhile
endfun

augroup CtagsGroup
  autocmd!
  autocmd BufRead * call FindTagsFileInGitDir(expand("<afile>"))
augroup END

map <F3> :!ctags --tag-relative=yes -R -f .git/tags .<CR>

" ================== Cyrillic support =================
set keymap=russian-jcukenwin
set iminsert=0
set imsearch=0
highlight lCursor guifg=NONE guibg=Cyan
:setlocal spell spelllang=ru_yo,en_us

" old settings  ================
set backspace=2 " Backspace deletes like most programs in insert mode
set nobackup
set nowritebackup
set noswapfile
set history=50

" Numbers
set numberwidth=5

" Make it obvious where 80 characters is
set textwidth=80
set colorcolumn=+1

set laststatus=2
set cursorline
set pastetoggle=<F4>
set ruler
set mousehide
set mouse=a

" Use system clipboard for copy/paste
set clipboard=unnamedplus

" Display extra whitespace
set list listchars=tab:»·,trail:·,nbsp:·

" Use one space, not two, after punctuation.
set nojoinspaces

set enc=utf-8
set fencs=ucs-bom,utf-8,default,latin1

" File types
" make uses real tabs
au FileType make set noexpandtab

" Thorfile, Rakefile, Vagrantfile and Gemfile are Ruby
au BufRead,BufNewFile {Gemfile,Rakefile,Vagrantfile,Thorfile,config.ru} set ft=ruby
au BufRead,BufNewFile *_spec.rb set ft=ruby.spec
au BufRead,BufNewFile *.pug set ft=slim

" md, markdown, and mk are markdown and define buffer-local preview
" au BufRead,BufNewFile *.{md,markdown,mdown,mkd,mkdn} call s:setupMarkup()

au BufRead,BufNewFile *.md setlocal textwidth=80

" add json syntax highlighting
au BufNewFile,BufRead *.json set ft=javascript

" add slim syntax highlighting
au BufNewFile,BufRead *.slim set ft=slim

" add config syntax highlighting
" au BufNewFile,BufRead *.conf set ft=conf
" unable unless nginx.vim disable

" ====================================================================

setlocal spell spelllang=
setlocal nospell
function ChangeSpellLang()
  if &spelllang =~ "en_us"
    setlocal spell spelllang=ru
    echo "spelllang: ru"
  elseif &spelllang =~ "ru"
    setlocal spell spelllang=
    setlocal nospell
    echo "spelllang: off"
  else
    setlocal spell spelllang=en_us
    echo "spelllang: en"
  endif
endfunc

" map spell on/off for English/Russian
map <F7> <Esc>:call ChangeSpellLang()<CR>

highlight clear SpellBad
highlight SpellBad ctermfg=Red

highlight clear SpellCap
highlight SpellCap ctermfg=Blue

highlight clear SpellLocal
highlight SpellLocal ctermfg=Green

" сдвиг текста
" vnoremap < <gv vnoremap=""> >gv

" strip trailing blank lines on save
autocmd BufWritePre * :silent! %s#\($\n\s*\)\+\%$##

" strip trailing whitespace on save
autocmd BufWritePre * :FixWhitespace
